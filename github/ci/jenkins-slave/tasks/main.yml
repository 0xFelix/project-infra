- name: Check if we are on intel
  shell: 'cat /sys/module/kvm_intel/parameters/nested'
  register: kvm_intel
  ignore_errors: True
- name: Check if we are on amd
  shell: 'cat /sys/module/kvm_amd/parameters/nested'
  register: kvm_amd
  ignore_errors: True
- name: Check if nesting is enabled
  shell: '(cat /sys/module/kvm_intel/parameters/nested || cat /sys/module/kvm_amd/parameters/nested) | egrep "[nN0]"'
  register: nesting_disabled
  ignore_errors: True
- name: Remove virtualization module to allow enabling it with nesting
  modprobe:
    name: "kvm_intel"
    state: absent
  when: kvm_intel.rc == 0 and nesting_disabled.rc == 0
- name: Enable nested virtualization under module options
  copy:
    dest: /etc/modprobe.d/kvm.conf
    content: |
      options kvm_intel nested=1
  when: kvm_intel.rc == 0
- name: Enable module with nesting
  modprobe:
    name: "kvm_intel"
    state: present
  when: kvm_intel.rc == 0
- name: Remove virtualization module to allow enabling it with nesting
  modprobe:
    name: "kvm_amd"
    state: absent
  when: kvm_amd.rc == 0 and nesting_disabled.rc == 0
- name: Enable nested virtualization under module options
  copy:
    dest: /etc/modprobe.d/kvm.conf
    content: |
      options kvm_amd nested=1
  when: kvm_amd.rc == 0
- name: Enable module with nesting
  modprobe:
    name: "kvm_amd"
    state: present
  when: kvm_amd.rc == 0
- name: Install the latest version of Java
  yum:
    name: java
    state: latest
- user:
    name: jenkins
    shell: /bin/bash
    createhome: yes
- name: Creates jenkins workdir
  file:
    path: "{{ swarmRootDir }}"
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0775
- name: Download swarm client
  get_url:
    url: https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/3.9/swarm-client-3.9.jar
    dest: /opt/swarm-client.jar
- name: Ensures systemd directory exists
  file: 
    path: /etc/systemd/system/
    state: directory    
- copy: 
    content: "{{ jenkinsPass }}" 
    dest: /opt/.pwd 
- name: Copy systemd file    
  template:
    src: "{{ role_path }}/templates/swarm.service"
    dest: /etc/systemd/system/swarm.service
- name: Copy labels file
  template:
    src: "{{ role_path }}/templates/labels"
    dest: "{{ swarmRootDir }}/labels"
- name: Make sure that  the swarm agent is running
  systemd:
    state: restarted
    daemon_reload: yes
    name: swarm
- name: Make sure that the swarm agent is started on boot
  systemd:
    name: swarm
    enabled: yes
